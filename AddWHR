//whr-module for partner federation to SharePoint 
//References to articles at the end. 
//Deployed as dll via the solution wsp
//C:\Windows\Microsoft.NET\assembly\GAC_MSIL\SP.SiteName\SP.SiteName.dll 
//Added to web.config via feature activation  
//<system.webServer>
//    <modules runAllManagedModulesForAllRequests="true">
//	..
//      <add name="SPWHRModule" type="SP.SiteName.HttpModules.AddWHR, SP.SiteName, Version=1.0.0.0, Culture=neutral, PublicKeyToken=112ea9c270aaa72a" />
//    </modules>

using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Web;

namespace SP.Extranet.HttpModules
{
    public class AddWHR : iHttpModule
    {
        public void Dispose()
        {
            //throw new NotImplementedException();
        }
        public void Init(HttpApplication context)
        {
            try
            {
                context.BeginRequest += context_BeginRequest;
            }
            catch (Exception ex)
			{
				Debug.WriteLine(ex.Message);
			}
        }

        void context_BeginRequest(object sender, EventArgs e)
        {
            try
            {
                HttpApplication application = (HttpApplication)sender;
                HttpContext context = application.Context;
                Uri rqst = context.Request.Url;
                string url = rqst.ToString().ToLower();

                if (
                    url.Contains("_trust/default.aspx")
                    &&
                    (!context.Request.QueryString.AllKeys.Contains("whr"))
                    )
                {
                    
                    StringBuilder sb = new StringBuilder(1024);
                    //enumerate all query string values
                    if (context.Request.QueryString.Keys.Count > 0)
                    {
                        foreach (string key in context.Request.QueryString.Keys)
                        {
                            sb.append(key + "=" + HttpUtility.UrlEncode(context.Request.QueryString[key]) + "&");
                        }

                        //Our static partner realm identifier here is "PI2/IP". 
                        //INSERT YOUR BUSINESS LOGIC HERE TO SEND THE USER TO THE LOCATION THEY SHOULD GO 
                        //Many scenarios allow to detect users organisation from the UPN @domain.com  

                        sb.append("whr=" + "PI2/IP");

                        //INSERT YOUR BUSINESS LOGIC HERE TO SEND THE USER TO THE LOCATION THEY SHOULD GO 
                        //Many scenariows allow to detect users organisation from the UPN @domain.com  

                        string redir = rqst.Scheme + "://" + rqst.Host + ":" +
                            rqst.Port.ToString() + rqst.AbsolutePath;
                        context.Response.Redirect(redir + "?" + sb.ToString());
                    }
                }
            }
		    catch (Exception ex)
		    //Add you own exception handing. 
		    {
			//Sapmle code from the references  
			Debug.WriteLine(ex.Message);
			//A customer's custom exception logger  
			ExceptionHandling.PublishToSPLog(123, ex.Message, "", "context_BeginRequest", ex);
		    }

	    }
	    
        }
    }
}

Reference: 
//Steve Peschka 
//Using the WHR Parameter with SP2010 and SAML Auth
//https://samlman.wordpress.com/2015/03/01/using-the-whr-parameter-with-sharepoint-2010-and-saml-auth/
//http://blogs.technet.com/b/speschka/archive/2011/09/14/using-the-whr-parameter-with-sharepoint-2010-and-saml-auth.aspx

//
//Chris Keyser 
//SharePoint 2010 claims and Home Realm Discover â€“ passing whr on the url to SharePoint
//https://blogs.msdn.microsoft.com/chriskeyser/2011/10/02/sharepoint-2010-claims-and-home-realm-discover-passing-whr-on-the-url-to-sharepoint/
